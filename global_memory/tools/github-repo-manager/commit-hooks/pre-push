#!/bin/bash
# Pre-push hook to validate branch and prevent pushing to main

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Get current branch
CURRENT_BRANCH=$(git branch --show-current)

# Protected branches
PROTECTED_BRANCHES=("main" "master")

# Check if pushing to protected branch
while read local_ref local_sha remote_ref remote_sha; do
    # Extract branch name from remote ref
    remote_branch=$(echo "$remote_ref" | sed 's/refs\/heads\///')
    
    for protected in "${PROTECTED_BRANCHES[@]}"; do
        if [[ "$remote_branch" == "$protected" ]]; then
            echo -e "${RED}❌ ERROR: Direct push to '$protected' branch is not allowed!${NC}"
            echo -e "${YELLOW}Please create a pull request instead.${NC}"
            exit 1
        fi
    done
done

# Validate current branch name
VALID_PREFIXES=("feature/" "docs/" "fix/" "config/" "update/" "work/")
VALID=false

for prefix in "${VALID_PREFIXES[@]}"; do
    if [[ "$CURRENT_BRANCH" == "$prefix"* ]]; then
        VALID=true
        break
    fi
done

if [[ "$VALID" == false ]]; then
    echo -e "${RED}❌ ERROR: Invalid branch name '$CURRENT_BRANCH'${NC}"
    echo -e "${YELLOW}Branch must start with one of: ${VALID_PREFIXES[*]}${NC}"
    exit 1
fi

# Run tests if available
if [[ -f "run-tests.sh" ]]; then
    echo -e "${YELLOW}Running tests before push...${NC}"
    if ! ./run-tests.sh; then
        echo -e "${RED}❌ Tests failed! Push aborted.${NC}"
        exit 1
    fi
fi

# Check for uncommitted changes
if ! git diff-index --quiet HEAD --; then
    echo -e "${YELLOW}⚠️  Warning: You have uncommitted changes${NC}"
    echo "Consider committing or stashing them before pushing."
fi

echo -e "${GREEN}✅ Pre-push checks passed!${NC}"
echo -e "${GREEN}Pushing branch: $CURRENT_BRANCH${NC}"
exit 0